name: Continuous Integration
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - rust_toolchain: stable
            tpm2_tss_version: "4.1.3"
          # AL2023 dependency versions
          - rust_toolchain: "1.85"
            tpm2_tss_version: "4.0.2"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.rust_toolchain }}-${{ matrix.tpm2_tss_version }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: ./.github/actions/tpm2-tss
        with:
          version: ${{ matrix.tpm2_tss_version }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          components: clippy, rustfmt
      - run: cargo build --all-targets --locked
      - run: cargo clippy --all-targets -- -D warnings
      - run: cargo fmt --all -- --check
      - run: cargo doc --no-deps
  static-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: docker build --file docker/builder.Dockerfile --tag nitro-tpm-tools-builder .
      - run: docker run --rm --tty --volume cargo-cache:/root/.cargo/registry --volume $PWD:/mnt nitro-tpm-tools-builder cargo build --bins --examples --locked
      - run: readelf -l ./target/debug/nitro-tpm-attest | grep -q "INTERP" && exit 1 || exit 0
      - run: readelf -l ./target/debug/nitro-tpm-pcr-compute | grep -q "INTERP" && exit 1 || exit 0
      - run: readelf -l ./target/debug/examples/nitro-tpm-kms-decrypt | grep -q "INTERP" && exit 1 || exit 0
